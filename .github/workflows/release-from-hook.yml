name: Release (from Gemini hook)

on:
  repository_dispatch:
    types: [gemini-release]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Parse payload
        id: parse
        run: |
          echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          printf "NOTES<<__EOF__\n%s\n__EOF__\n" "${{ github.event.client_payload.notes }}" >> $GITHUB_OUTPUT

      - name: Ensure tag exists
        run: |
          if ! git rev-parse "${{ steps.parse.outputs.VERSION }}" >/dev/null 2>&1; then
            git tag -a "${{ steps.parse.outputs.VERSION }}" -m "Release ${{ steps.parse.outputs.VERSION }}"
            git push origin "${{ steps.parse.outputs.VERSION }}"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install & Build
        run: |
          npm ci
          npm run build --if-present

      - name: Zip dist (if present)
        if: ${{ hashFiles('dist/**') != '' }}
        run: |
          mkdir -p artifacts
          ( cd dist && zip -qry ../artifacts/app-dist.zip . )

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.parse.outputs.VERSION }}
          body: ${{ steps.parse.outputs.NOTES }}
          generate_release_notes: true
          files: |
            artifacts/app-dist.zip
